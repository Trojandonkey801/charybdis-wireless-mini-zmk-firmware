#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
     conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <4 5>;
            then-layer = <3>;
        };
    };
    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        tdtb: td_mouse_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&httl 0 0>, <&to 0>;

            tapping-term-ms = <200>;
            label = "Trackball & Scroll";
        };

        tdtb2: td_slow_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&httl 0 0>, <&to 0>;

            label = "Scroll Slow & Base";
        };

        httl: ht_two_layers {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        td_bore: BASE_or_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&to 0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
            layers = <0>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
            layers = <0>;
        };

        BASE_or_EXTRAS {
            bindings = <&td_bore>;
            key-positions = <38 39>;
        };
    };

    macros {
        VSplit: VSplit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp SEMI &kp LS(V) &kp LS(S) &kp LS(P) &kp RET>;
            label = "VSPLIT";
        };

        HSplit: HSplit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp SEMI &kp LS(S) &kp LS(P) &kp RET>;
            label = "HSPLIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R        &kp T    &kp Y  &kp U        &kp I      &kp O       &kp P            &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D         &kp F        &kp G    &kp H  &kp J        &kp K      &kp L       &lt 4 SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V        &kp B    &kp N  &kp M        &kp COMMA  &kp PERIOD  &lt 4 SLASH      &kp RIGHT_SHIFT
                              &kp LEFT_ALT  &lt 1 ENTER  &mo 1    &mo 2  &lt 2 SPACE
            >;
        };

        NUM {
            bindings = <
&kp ESC  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &none     &none      &none         &none      &none  &none
&trans   &none  &none         &none         &none         &none           &kp LEFT  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &none  &none
&trans   &none  &none         &none         &none         &bt BT_CLR      &none     &none      &trans        &none      &none  &kp RSHIFT
                              &kp LGUI      &kp ENTER     &none           &kp N0    &kp SPACE
            >;
        };

        NAV {
            bindings = <
&kp GRAVE  &none     &none      &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &none     &none    &kp N7        &kp N8        &kp N9        &none  &kp DELETE
&trans     &kp PLUS  &kp MINUS  &kp UNDERSCORE         &kp EQUAL          &trans    &VSplit  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none  &none
&none      &none     &none      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &none     &HSplit  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &trans
                                &none                  &kp N0             &trans    &trans   &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &none      &none      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mo 3   &mkp LCLK  &mkp RCLK  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
