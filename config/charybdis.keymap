#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        hh {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };

    behaviors {
        /*
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        tdtb: td_mouse_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&httl 0 0>, <&to 0>;

            tapping-term-ms = <200>;
            label = "Trackball & Scroll";
        };

        tdtb2: td_slow_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&httl 0 0>, <&to 0>;

            label = "Scroll Slow & Base";
        };

        httl: ht_two_layers {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        td_bore: BASE_or_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&to 0>;
        };
*/

        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
        };

        quicktap: quicktap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICKTAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
        };
    };

    combos {
        compatible = "zmk,combos";

        /*
        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
            layers = <0>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
            layers = <0>;
        };

        BASE_or_EXTRAS {
            bindings = <&td_bore>;
            key-positions = <38 39>;
        };
 */
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp TAB>;
            label = "ALT_TAB";
            wait-ms = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y  &kp U      &kp I      &kp O         &kp P          &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D  &kp F      &kp G    &kp H  &kp J      &kp K      &kp L         &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V      &kp B    &kp N  &kp M      &kp COMMA  &lt 3 PERIOD  &kp SLASH      &kp RIGHT_SHIFT
                              &mo 2  &kp ENTER  &mo 1    &mo 2  &kp SPACE
            >;
        };

        NUM {
            bindings = <
&kp GRAVE  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &none     &none      &none         &none      &none      &trans
&trans     &none  &none         &none         &none         &none           &kp LEFT  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &none      &none
&trans     &none  &none         &none         &none         &bt BT_CLR      &none     &trans     &trans        &trans     &mkp LCLK  &mkp RCLK
                                &kp LGUI      &kp ENTER     &none           &kp N0    &kp SPACE
            >;
        };

        NAV {
            bindings = <
&kp TAB  &kp ESCAPE  &none      &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &none           &none     &kp N7        &kp N8        &kp N9        &none  &kp DELETE
&trans   &kp PLUS    &kp MINUS  &kp UNDERSCORE         &kp EQUAL          &trans          &trans    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none  &none
&none    &none       &none      &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp LEFT_ALT    &kp LALT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &trans
                                &none                  &kp N0             &trans          &trans    &kp N0
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
